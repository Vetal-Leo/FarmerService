@model Domain.Entities.Growing.GrowingFruitComings

@{
    ViewBag.Title = "Плодовые деревья (А-И) - Редактирование";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<h4 class="georgia-handler">Сервис Растениеводство.</h4>
<h3 class="academy-fruit">Плодовые деревья (А-И). Приход.</h3>
@Scripts.Render("~/bundles/jquery");
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal col-md-offset-3">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.LandingDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-5">
                <div class="input-group date" id="datetimepicker">
                    @if (Model.LandingDate != null)
                    {
                        @Html.TextBoxFor(model => model.LandingDate, new { @class = "form-control", @Value = Model.LandingDate.Value.ToString("dd.MM.yyyy"), id = "landingdate"})
                        @Html.ValidationMessageFor(model => model.LandingDate, "", new { @class = "text-danger" })
                    }
                    <span class="input-group-addon">
                        <span class="glyphicon glyphicon-calendar"></span>
                    </span>
                </div>
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.FloweringDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-5">
                <div class="input-group date" id="datetimepicker1">
                    @if (Model.FloweringDate != null)
                    {
                        @Html.TextBoxFor(model => model.FloweringDate, new { @class = "form-control", @Value = Model.FloweringDate.Value.ToString("dd.MM.yyyy"), id = "floweringdate"})
                        @Html.ValidationMessageFor(model => model.FloweringDate, "", new { @class = "text-danger" })
                    }
                    <span class="input-group-addon">
                        <span class="glyphicon glyphicon-calendar"></span>
                    </span>
                </div>
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.CultureType, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-5">
                @Html.DropDownListFor(model => model.CultureType, new SelectList(Model.GrowingCultureses.Select(n => n.Name)),
                "Абрикос", new {@class = "form-control", id = "dropdownlist"})
                @Html.ValidationMessageFor(model => model.CultureType, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-5">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.MassType, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-5">
                @Html.DropDownListFor(model => model.MassType, new SelectList(new[]
                {
                    "грамм", "кг", "центнер", "тонн", "килотонн", "шт"
                }), "Ед.массы",
                new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.MassType, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CurrencyType, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-5">
                @Html.DropDownListFor(model => model.CurrencyType, new SelectList(new[]
                {
                    "гр", "руб", "$", "€",
                }), "Валюта",
                new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.CurrencyType, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Cost, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-5">
                @Html.EditorFor(model => model.Cost, new { htmlAttributes = new { @class = "form-control"}})
                @Html.ValidationMessageFor(model => model.Cost, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Amount, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-5">
                @Html.EditorFor(model => model.Amount, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Amount, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Document, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-5">
                <label id="file-success" class="text-success"></label>
                @Html.EditorFor(model => model.Document, new { htmlAttributes = new { id = "document", type = "file", accept = "application/pdf" } })
                <p id="sendpdf" class="btn btn-success btn-xs inputfile">Загрузить на сервер</p>
                @Html.ValidationMessageFor(model => model.Document, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-5">
                <input id="fruitsend" type="hidden" />
            </div>
        </div>
    </div>
}
<br />
<div class="form-group">
    <div class="col-md-offset-2 col-md-5">
        <input value="Сохранить" id="fruitpost" class="btn btn-primary btn-sm" />
    </div>
</div>
<div>
    @Html.ActionLink("Назад в Плодовые деревья (А-И)", "BergamotComing")
</div>

<div class="modal fade" id="incorrectdate1" tabindex="-1" role="dialog">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header modal-warning">
                <button class="close" type="button" data-dismiss="modal">x</button>
                <h1 class="modal-title">Обратите внимание!</h1>
            </div>
            <div class="modal-body">
                <h3 class="text-warning">Посадка этой культуры в этот период не происходит!</h3>
                <h4 class="text-primary">Рекомендуемые месяцы для посадки :</h4>
                <h4 id="plantmonth" class="text-success"></h4>
            </div>
            <div class="modal-footer">
                <button class="btn btn-primary" type="button" data-dismiss="modal">Нет</button>
                <button class="btn btn-default" type="button" data-dismiss="modal" id="yes1">Всё равно продолжить</button>
            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="incorrectdate2" tabindex="-1" role="dialog">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header modal-warning">
                <button class="close" type="button" data-dismiss="modal">x</button>
                <h1 class="modal-title">Обратите внимание!</h1>
            </div>
            <div class="modal-body">
                <h3 class="text-warning">Цветение этой культуры в этот период не происходит!</h3>
                <h4 class="text-primary">Рекомендуемые месяцы цветения культуры :</h4>
                <h4 id="flowermonth" class="text-success"></h4>
            </div>
            <div class="modal-footer">
                <button class="btn btn-primary" type="button" data-dismiss="modal">Нет</button>
                <button class="btn btn-default" type="button" data-dismiss="modal" id="yes2">Всё равно продолжить</button>
            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="incorrectdate3" tabindex="-1" role="dialog">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header modal-warning">
                <button class="close" type="button" data-dismiss="modal">x</button>
                <h1 class="modal-title">Обратите внимание!</h1>
            </div>
            <div class="modal-body">
                <h3 class="text-warning">Посадка и цветение этой культуры в этот период не происходят!</h3>
                <h4 class="text-primary">Рекомендуемые месяцы посадки культуры :</h4>
                <h4 id="plant" class="text-success"></h4>
                <h4 class="text-primary">Рекомендуемые месяцы цветения культуры :</h4>
                <h4 id="flower" class="text-success"></h4>
            </div>
            <div class="modal-footer">
                <button class="btn btn-primary" type="button" data-dismiss="modal">Нет</button>
                <button class="btn btn-default" type="button" data-dismiss="modal" id="yes3">Всё равно продолжить</button>
            </div>
        </div>
    </div>
</div>

<div class="modal fade " id="error" tabindex="-1" role="dialog">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-body">
                <h4 class="modal-title text-danger">Не все поля заполнены или заполнены некорректно!</h4>
            </div>
            <div class="modal-footer">
                <button class="btn btn-primary" type="button" data-dismiss="modal">Ок</button>
            </div>
        </div>
    </div>
</div>



<script type="text/javascript">
        $(function () {
            //Install the widget for the locale using the language parameter and the values of RU
            $('#datetimepicker').datetimepicker(
                { pickTime: false, language: 'ru' }
            );
            $('#datetimepicker1').datetimepicker(
               { pickTime: false, language: 'ru' }
            );
            //Download Pdf-files to the server.
            $("#sendpdf").click(function () {
                var files = document.getElementById("document").files;
                if (files.length > 0) {
                    if (window.FormData !== undefined) {
                        var data = new FormData();
                        for (var x = 0; x < files.length; x++) {
                            data.append("file" + x, files[x]);
                        }
                        $.ajax({
                            method: "POST",
                            url: "/api/User/AddNewPdf",
                            contentType: false,
                            processData: false,
                            data: data,
                            success: function () {
                                $("#file-success").text("• Файл успешно загружен на сервер");
                            },
                            error: function () {
                                alert("Файл не загружен!");
                            }
                        });
                    }
                }
            });
        });
</script>
